searchState.loadedDescShard("biotest", 0, "Generate random test data for bioinformatics\nDeclarations of some constants value\nError struct of project biotest\nFormat data generation\nCreate a random generator with constants::SEED\nCreate a random generator with a user seed\nDeclarations of many possible values\nbiotest version\nSome different possible chromosomes name\nCIGAR GFF\nCIGAR SAM\nGff feature\nGff feature\nFixed random seed\nStrand\nAll vcf info number\nAll vcf info type\nAll vcf info number\nAll vcf info type\nLength of vcf string\nContains the error value\nEnum to manage error\nContains the success value\nrand::distributions::weighted::WeightedError\nAlias of result\nstd::io::Error error\nunreachable\nWeightedDistribution is larger than value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nfile name\nline number\nTrait of Format\nCIGAR\nCreate a file at path with header and multiple records\nFasta generation\nFastq generation\nGFF3 format\nWrite header of format in output\nquality generation\nWrite a record in output\nWrite multiple record in output\nSequence generation\nVCF generation\nStruct to generate cigar record\nCreate a builder for building <code>Cigar</code>. On the builder, call …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct to generate random fastq record\nCreate a builder for building <code>Fasta</code>. On the builder, call …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct to generate random fastq record\nCreate a builder for building <code>Fastq</code>. On the builder, call …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct to generate gff record\nCreate a builder for building <code>Gff</code>. On the builder, call …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct to generate random DNA sequence\nCreate a builder for building <code>Quality</code>. On the builder, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct to generate random DNA sequence\nCreate a builder for building <code>Sequence</code>. On the builder, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStruct to generate random fastq record\nCreate a builder for building <code>Vcf</code>. On the builder, call …\nReturns the argument unchanged.\nVCF header generation\nCalls <code>U::from(self)</code>.\nVCF header generation\nStruct to generate header\nCreate a builder for building <code>Header</code>. On the builder, call …\nReturns the argument unchanged.\nGenerate vcf header\nCalls <code>U::from(self)</code>.\nStruct to generate record\nCreate a builder for building <code>Record</code>. On the builder, call …\nReturns the argument unchanged.\nGenerate vcf record\nCalls <code>U::from(self)</code>.\nAscii character between A-z\nAll possible Vcf info type\nAll possible Vcf info type\nAll possible Vcf format type\nAll possible Vcf format type\nAll possible value for strand\nAll possible gff frame format type\nAll possible gff frame format type\nDifferente generic ascii alphabet\nPossible chromosomes names\nPossible cigar alphabet\nbetween -100.0 and 100.0\nDefault chromosomes names\nDna any case\nDna lower case\nDna upper case\nRange of float value\nFull i32 range\nFull f32 range\nTrait use to generate random data from values Enum\nTrait to choose a random value in range and convert it in …\nGff CIGAR value\nPossible value for frame\nPossible value for frame\nIllumina quality range version 1.8\nIllumina quality range version 1.3\nIllumina quality range version 1.5\nIllumina quality range version 1.8\nRange of integer value\nLower case latin alphapet\nNo unknow\nNo unknow\nNo unknow\nAny nucleotides\nVcf possible position\nFastq quality range\nQuality\nRna any case\nRna lower case\nRna upper case\nSam CIGAR value\nSanger fastq quality range\nSolexa fastq quality range\nPossible value for strand\nUpper case latin alphabet\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nUserDefine\nVcf integer possible value\nVcf default value\nPossible vcf format type\nPossible vcf format type\nPossible vcf info type\nPossible vcf info type\nAny visible ascii character\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate n bytes\nGet a value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate n bytes with a weigthed distributions")