var searchIndex = new Map(JSON.parse('[\
["biotest",{"doc":"Generate random test data for bioinformatics","t":"CCCHHHHJJJJJJJJJJJJJPGPIPPNNNNNNNNNNNNNOO","n":["constants","error","format","quality","rand","sequence","text","ALPHABETS","BIOTEST_VERSION","CHROMOSOMES","NUCLEOTIDES","NUCLEOTIDES_LOWER","NUCLEOTIDES_UPPER","PHRED33","PHRED64","SEED","VCF_FORMAT_NUMBER","VCF_FORMAT_TYPE","VCF_INFO_NUMBER","VCF_INFO_TYPE","Err","Error","Ok","Result","StdIo","Unreachable","borrow","borrow_mut","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","vzip","file","line"],"q":[[0,"biotest"],[7,"biotest::constants"],[20,"biotest::error"],[39,"biotest::error::Error"],[41,"rand::rngs::std"],[42,"std::io"],[43,"core::fmt"],[44,"core::fmt"],[45,"core::error"],[46,"core::option"],[47,"alloc::string"],[48,"core::result"],[49,"core::any"]],"d":["Declarations of some constants value","Error struct of project biotest","Format data generation","Write a random quality of length in output","Generate random generator","Write a random sequence of length in output","Write random text of length in output","Alphabets with [ \\\\ ] ^ _ `","biotest version","Some different possible chromosomes name","Nucleotides with any case","Nucleotides lower","Nucleotides upper","All possible phred 33 value","All possible phred 64 value","Fixed random seed","All vcf info number","All vcf info type","All vcf info number","All vcf info type","Contains the error value","Enum to manage error","Contains the success value","Alias of result","std::io::Error error","unreachable","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","file name","line number"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,4,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,15,15],"f":"```{{cbd}{{h{f}}}j}{{}b}11```````````````````{ce{}{}}0{{ln}A`}0{cc{}}{Abl}3{l{{Af{Ad}}}}{cAh{}}{c{{Aj{e}}}{}{}}0{cAl{}}7``","c":[],"p":[[5,"StdRng",41],[1,"usize"],[1,"unit"],[8,"Result",20],[10,"Write",42],[6,"Error",20],[5,"Formatter",43],[8,"Result",43],[5,"Error",44],[10,"Error",45],[6,"Option",46],[5,"String",47],[6,"Result",48],[5,"TypeId",49],[15,"Unreachable",39]],"b":[[28,"impl-Display-for-Error"],[29,"impl-Debug-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
